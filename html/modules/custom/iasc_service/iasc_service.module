<?php

/**
 * @file
 * IASC Services.
 */

use Drupal\facets\Entity\Facet;
use Drupal\paragraphs\Entity\Paragraph;
use Drupal\search_api\Entity\Index;
use Drupal\Taxonomy\Entity\Term;

/**
 * Implements hook_preprocess_paragraph().
 */
function iasc_service_preprocess_paragraph(&$vars) {
  $paragraph = $vars['paragraph'];
  if (!($paragraph instanceof Paragraph)) {
    return;
  }

  $bundle = $paragraph->bundle();
  switch ($bundle) {
    case 'services_landing_block':
      iasc_service_preprocess_paragraph_services_landing_block($vars);
      break;

  }
}

/**
 * Build services landing block.
 */
function iasc_service_landing_block_facets() {
  return [
    'aap_services' => 'label',
    'aap_service_coverage_region' => 'label',
    'services_relevant_hpc_stage' => 'no-sort',
    'aap_agency_initiative_or_group' => 'label',
  ];
}

/**
 * Build services landing block.
 */
function iasc_service_preprocess_paragraph_services_landing_block(&$vars) {
  $active_facets = iasc_service_landing_block_facets();
  $lookup = [];

  $index = Index::load('services');
  $query = $index->query([
    'limit' => 0,
  ]);

  $server = $index->getServerInstance();
  if ($server->supportsFeature('search_api_facets')) {
    $facet_options = [];
    foreach ($active_facets as $facet_name => $sort_by) {
      $facet = Facet::load($facet_name);
      if ($facet) {
        $field_name = $facet->getFieldIdentifier();
        $lookup[$field_name] = [
          'key' => $facet->getUrlAlias(),
          'name' => $facet_name,
          'label' => $facet->label(),
        ];
        $facet_options[$field_name] = [
          'field' => $field_name,
          'limit' => 0,
          'operator' => 'OR',
          'min_count' => 1,
          'missing' => TRUE,
        ];
      }
    }

    $query->setOption('search_api_facets', $facet_options);
  }

  $results = $query->execute();
  $facets = $results->getExtraData('search_api_facets', []);

  foreach ($active_facets as $facet_name => $sort_by) {
    $facet = Facet::load($facet_name);
    if ($facet) {
      $field_name = $facet->getFieldIdentifier();
      $facet_values = $facets[$field_name];

      $tids = [];
      foreach ($facet_values as $facet_value) {
        $id = trim($facet_value['filter'], '"');
        $tids[] = $id;
      }

      $terms = Term::loadMultiple($tids);

      $options = [];
      foreach ($facet_values as $facet_value) {
        $id = trim($facet_value['filter'], '"');
        if (isset($terms[$id])) {
          $options[] = [
            'key' => $lookup[$field_name]['key'] . ':' . $id,
            'label' => $terms[$id]->getName() . ' (' . $facet_value['count'] . ')',
          ];
        }
      }

      // Sort options.
      if ($sort_by === 'label') {
        uasort($options, function ($a, $b) {
          return strnatcasecmp($a['label'], $b['label']);
        });
      }

      $vars['facets'][$field_name]['label'] = $lookup[$field_name]['label'];
      $vars['facets'][$field_name]['name'] = $lookup[$field_name]['name'];
      $vars['facets'][$field_name]['options'] = $options;
    }
  }
}

/**
 * Implements hook_token_info().
 */
function iasc_service_token_info() {
  return [
    'types' => [
      'iasc_service' => [
        'name' => t('IASC services.'),
        'description' => t('Tokens related to the service directory.'),
      ],
    ],
    'tokens' => [
      'iasc_service' => [
        'num_organizations' => [
          'name' => t('Number of organizations.'),
          'description' => t('Number of organizations in the service directory.'),
        ],
      ],
    ],
  ];
}

/**
 * Implements hook_tokens().
 */
function iasc_service_tokens($type, $tokens, array $data, array $options, $bubbleable_metadata) {
  $replacements = [];

  if ($type == 'iasc_service') {
    foreach ($tokens as $name => $original) {
      switch ($name) {
        case 'num_organizations':
          $replacements[$original] = iasc_service_index_num_documents();
          break;
      }
    }
  }

  return $replacements;
}

/**
 * Get num of documents in service index.
 */
function iasc_service_index_num_documents() {
  $index = Index::load('services');
  $query = $index->query([
    'limit' => 0,
  ]);

  $results = $query->execute();
  return $results->getResultCount();
}
