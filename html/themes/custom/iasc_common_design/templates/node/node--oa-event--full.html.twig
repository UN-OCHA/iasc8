{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: (optional) The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}
{%
  set classes = [
    'node',
    'node--type-' ~ node.bundle|clean_class,
    node.isPromoted() ? 'node--promoted',
    node.isSticky() ? 'node--sticky',
    not node.isPublished() ? 'node--unpublished',
    view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
    'cd-layout-with-section-sidebar',
  ]
%}
{{ attach_library('common_design/cd-alert') }}
{% set dialIn = node.field_dial_in_meeting.0.value %}

<article{{ attributes.addClass(classes) }}>

  {{ title_prefix }}
  {% if title %}
    {% if not page %}
      <h2{{ title_attributes }}>
        <a href="{{ url }}" rel="bookmark">{{ title }}</a>
      </h2>
    {% else %}
      {# This is not wrapped as this renders the page title block which
         already wraps the node title in a <h1>. #}
      {{ title }}
    {% endif %}
  {% endif %}
  {{ title_suffix }}

  {{ local_tasks }}

  {% if display_submitted %}
    <footer class="node__meta">
      {{ author_picture }}
      <div{{ author_attributes.addClass('node__submitted') }}>
        {% trans %}Submitted by {{ author_name }} on {{ date }}{% endtrans %}
        {{ metadata }}
      </div>
    </footer>
  {% endif %}

  <div{{ content_attributes.addClass('node__content') }}>

    {% block section %}
    <div class="cd-layout-two-col">

      <div class="cd-layout-main-content">

        <div class="cd-teaser__date clearfix">
          {{ content.field_oa_date }}

          <div class="cd-teaser__date__time-only">
            {{ event_time.output }}
          </div>

          {% if logged_in %}
            <div class="cd-teaser__date__time-user">
              {% if content.field_oa_date %}
                {% if content.field_oa_date.0['#date']['start_date']['#text'] != content.field_oa_date.0['#date']['end_date']['#text']  %}
                  {% if node.field_oa_date[0].start_date|date('Ymd') != node.field_oa_date[0].end_date|date('Ymd') %}
                    {{ node.field_oa_date[0].start_date|date('d.m.Y h.i a') }} }}
                  {% else %}
                    {{ node.field_oa_date[0].start_date|date('d.m.Y h.i a') }} â€” {{ node.field_oa_date[0].end_date|date('h.i a') }}
                  {% endif %}
                {% else %}
                  {{ node.field_oa_date[0].start_date|date('d.m.Y h.i a') }} }}
                {% endif %}
                ({{ datetime|date('T') }})
              {% endif %}
            </div>
          {% endif %}

          {% if content.field_city|render %}
            <p><strong>{{ content.field_city[0]['#context']['value'] }}</strong></p>
          {% endif %}

        </div>

        {% if not logged_in %}
          <div class="cd-alert">
            <div aria-live="polite">
              <svg class="cd-icon cd-icon--about" aria-hidden="true" focusable="false" width="16" height="16">
                <use xlink:href="#cd-icon--about"></use>
              </svg>
              <div class="cd-alert__container cd-max-width [ cd-flow ]">
                <div class="cd-alert__title">
                  {% trans %}
                    Please log in for full Document listing.
                  {% endtrans %}
                </div>
                <div class="cd-alert__message">
                  <p>{% trans %}Meetings often reference non-public documents. Please&nbsp{% endtrans %}<a href="/user/login/hid?destination={{ path('<current>') }}">{% trans %}log in</a> to see all available content.{% endtrans %}</p>
                </div>
              </div>
            </div>
          </div>
        {% endif %}

        {{ content|without('field_oa_date', 'field_content', 'field_sidebar', 'field_footer', 'field_featured_image', 'field_contact', 'field_city', 'field_additional_locations', 'field_venue', 'field_room', 'field_host', 'field_contact', 'field_iasc_audience', 'field_meeting_agendas', 'field_meeting_notes', 'field_dial_in_meeting', 'field_info_private') }}
        {{ content.field_content }}

        {% if logged_in %}
          {% if dialIn or content.field_info_private|render %}
            <div class="cd-alert">
              <div aria-live="polite">
                <svg class="cd-icon cd-icon--about" aria-hidden="true" focusable="false" width="16" height="16">
                  <use xlink:href="#cd-icon--about"></use>
                </svg>
                <div class="cd-alert__container cd-max-width [ cd-flow ]">
                  <div class="cd-alert__message">
                    {% if dialIn %}
                      {{ content.field_dial_in_meeting }}
                    {% endif %}
                    {{ content.field_info_private }}
                  </div>
                </div>
              </div>
            </div>
          {% endif %}
        {% endif %}

      </div>

      <aside class="cd-layout-sidebar-first" role="complementary">
        <div class="cd-location">
          {% if content.field_city|render or content.field_additional_locations|render or content.field_venue|render or content.field_room|render %}
            <div class="cd-sidebar__label">{% trans %}Location{% endtrans %}</div>
            {{ content.field_city }}
            {{ content.field_additional_locations }}
            {{ content.field_venue }}
            {{ content.field_room }}
          </div>
        {% endif %}
        {{ content.field_host }}
        {{ content.field_contact }}
        {{ content.field_meeting_agendas }}
        {{ content.field_meeting_notes }}
        {{ content.field_iasc_audience }}
        {{ content.field_sidebar }}
      </aside>

    </div>
    {% endblock %}

    {% if content.field_footer|render %}
      {{ content.field_footer }}
    {% endif %}

  </div>

</article>
