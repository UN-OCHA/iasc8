<?php

/**
 * @file
 * Template overrides, preprocess, and alter hooks for the OCHA Basic theme.
 */

/**
 * Implements template_preprocess_field().
 */
function iasc_common_design_preprocess_field(&$variables, $hook) {
  if (($variables['element']['#field_name'] == 'field_oa_date')) {
    if (!isset($variables['element']['#items'][0])) {
      return;
    }

    $min_date = strtotime($variables['element']['#items'][0]->value);
    $max_date = strtotime($variables['element']['#items'][0]->end_value);

    foreach ($variables['element']['#items'] as $item) {
      $min_date = min($min_date, strtotime($item->value));
      $max_date = max($max_date, strtotime($item->end_value));
    }

    $variables['min_date'] = [
      'day' => \Drupal::service('date.formatter')->format($min_date, 'custom', 'd'),
      'month' => \Drupal::service('date.formatter')->format($min_date, 'custom', 'M'),
      'year' => \Drupal::service('date.formatter')->format($min_date, 'custom', 'Y'),
    ];
    $variables['max_date'] = [
      'day' => \Drupal::service('date.formatter')->format($max_date, 'custom', 'd'),
      'month' => \Drupal::service('date.formatter')->format($max_date, 'custom', 'M'),
      'year' => \Drupal::service('date.formatter')->format($max_date, 'custom', 'Y'),
    ];
  }
}

/**
 * Implements template_preprocess_page().
 */
function disabled_iasc_common_design_preprocess_page(&$variables) {
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    if ($node->getType() == 'page') {
      $variables['has_hero_image'] = TRUE;
      $variables['hero_image'] = $node->get('field_featured_image')->view();
    }
  }
}

/**
 * Implements hook_theme_suggestions_taxonomy_term_alter().
 */
function iasc_common_design_theme_suggestions_taxonomy_term_alter(array &$suggestions, array $variables) {
  $term = $variables['elements']['#taxonomy_term'];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');
  // Add view mode theme suggestions.
  $suggestions[] = 'taxonomy_term__' . $sanitized_view_mode;
  $suggestions[] = 'taxonomy_term__' . $term->bundle() . '__' . $sanitized_view_mode;
  $suggestions[] = 'taxonomy_term__' . $term->id() . '__' . $sanitized_view_mode;
}
